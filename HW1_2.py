# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RvijmkbiQ9Cjrh6055oZDiv2wkgmbgki
"""

print('1##################################################################################')
import numpy as np
import matplotlib.pyplot as plt
np.random.seed(0)
ary1 = np.random.randint(0, 101, 20)
print(np.mean(ary1))
print(np.median(ary1))
print(np.std(ary1))
print('2##################################################################################')
import pandas as pd
data = {
    "Name" : ["Mohammad", "Farbod", "Ali", "Reza", "Mahmoud", "Hirbod"],
    "Age" : [30, 20, 15, 40, 44, 53],
    "City" : ["karaj", "neyshabour", "Tehran", "Sari", "Yazd", "Rasht"],
}
df = pd.DataFrame(data)
print(df.head(3))
print(df.tail(2))
print(df["Age"].describe())
print('3##################################################################################')
x = ["January", "February", "March", "April", "May"]
y = [5000, 3000, 2000, 4000, 8000]
plt.figure(figsize = (8, 6))
plt.bar(x, y, color="red", )
plt.xlabel("month")
plt.ylabel("Income")
plt.title("Monthly income of a stor")
plt.grid(axis='y', linestyle="--", alpha=0.7)
plt.xticks(rotation=0)
for i, v in enumerate(y):
  plt.text(i , v + 1, str(v), ha = 'center', va = 'bottom')
plt.show()
print('4##################################################################################')
np.random.seed(0)
arr1 = np.random.randint(0, 101, size=(5, 5))
arr2 = np.random.randint(0, 101, size=(5, 5))
print("arr1")
print(arr1)
print("arr2")
print(arr2)
print("arr1 + arr2")
print(arr1 + arr2)
print("arr1 - arr2")
print(arr1 - arr2)
print("arr1 * arr2")
print(arr1 * arr2)
print("arr1 / arr2")
print(arr1 / arr2)
print('5##################################################################################')
data = {
    "Name" : ["Ali", "Mohammad", "Reza", "Ramin", "Mehran", "Roya", "mahsa"],
    "age" : [20, 30, 40 ,50, 18, 33, 44],
    "gender" : ["M", "M", "M", "M", "M", "F", "F"]
}
df = pd.DataFrame(data)
more_than_30 = df[df["age"] > 30]
print("More than 30:")
print(more_than_30)
print('6##################################################################################')
x = np.random.rand(100)
y = np.random.rand(100)
plt.figure(figsize=(8, 6))
plt.scatter(x, y, label="random X", marker="X", color="red")
plt.xlabel("X")
plt.ylabel("Y")
plt.title("scatter plot")
plt.legend()
plt.grid(True)
plt.show()
print('7##################################################################################')
np.random.seed(0)
matrix1 = np.random.rand(2, 3)
matrix2 = np.random.rand(3, 4)
print("matrix1 * matrix2:")
print(np.dot(matrix1, matrix2))
print('8##################################################################################')
data = {
    'Product Apple Sales': [500, 480, 600, 750, 900, 850, 920, 1100, 1300, 1350, 1500, 1450, 1550, 1600, 1650, 1600, 1500, 1400, 1600, 1700, 1800, 1750, 1850, 1900],
    'Product Banana Sales': [300, 320, 400, 450, 500, 580, 700, 750, 820, 900, 950, 980, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1500, 1600, 1550, 1700],
    'Product Coconat Sales': [200, 210, 250, 280, 320, 350, 380, 400, 420, 440, 460, 480, 500, 520, 540, 560, 580, 600, 620, 640, 660, 680, 700, 720]
}

sales_data = pd.DataFrame(data)
product_columns = ['Product Apple Sales', 'Product Banana Sales', 'Product Coconat Sales']
total_sales = sales_data[product_columns].sum()
print(total_sales)
print('9##################################################################################')
y = [2, 4 , 6, 8, 3, 6, 5, 5, 11, 10]
x = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]
plt.plot(x, y, color="red", linewidth= 3, label="Growth by years" )
plt.xlabel("Population by millions")
plt.ylabel("Year")
plt.title("Populationgrowth of Narnia")
plt.legend(loc="upper right")
plt.grid(False)
plt.show()
print('10##################################################################################')
import pandas as pd
data = {
    "Name" : ["Ali", "Mohammad", "Reza", "Ramin", "Mehran", "Roya", "mahsa"],
    "Gender" : ["M", "M", "M", "M", "M", "F", "F"],
    "score" : [95, 85, 75, 65, 55, 90, 80]
}
df = pd.DataFrame(data)
conditions = [
    df['score'] >= 90,
    df['score'] >= 80,
    df['score'] >= 70,
    df['score'] < 70
]
grades = ["A", "B", "C", "D"]
df['Grade'] = np.select(conditions, grades)
print(df)
print('11##################################################################################')
data = {
    'Month': pd.date_range(start='2021-01-01', periods=24, freq='M'),
    'Product A Sales': [500, 480, 600, 750, 900, 850, 920, 1100, 1300, 1350, 1500, 1450, 1550, 1600, 1650, 1600, 1500, 1400, 1600, 1700, 1800, 1750, 1850, 1900],
    'Product B Sales': [300, 320, 400, 450, 500, 580, 700, 750, 820, 900, 950, 980, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1500, 1600, 1550, 1700],
    'Product C Sales': [200, 210, 250, 280, 320, 350, 380, 400, 420, 440, 460, 480, 500, 520, 540, 560, 580, 600, 620, 640, 660, 680, 700, 720]
}

sales_data = pd.DataFrame(data)
product_columns = ['Product A Sales', 'Product B Sales', 'Product C Sales']
total_sales = sales_data[product_columns].sum()

plt.bar(total_sales.index, total_sales.values)
plt.xlabel('Product')
plt.ylabel('Total Sales')
plt.title('Total Sales for Each Product')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

product_columns = ['Product A Sales', 'Product B Sales', 'Product C Sales']
total_sales = sales_data[product_columns].mean()

plt.bar(total_sales.index, total_sales.values)
plt.xlabel('Product')
plt.ylabel('Total Sales')
plt.title('Average Sales for Each Product')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

product_columns = ['Product A Sales', 'Product B Sales', 'Product C Sales']
total_sales = sales_data[product_columns].max()

plt.bar(total_sales.index, total_sales.values)
plt.xlabel('Product')
plt.ylabel('Total Sales')
plt.title('Maximum Sales for Each Product')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()
# Task 4:
sales_2021 = sales_data.loc[0:11][['Product A Sales', 'Product B Sales', 'Product C Sales']].sum()
sales_2022 = sales_data.loc[12:23][['Product A Sales', 'Product B Sales', 'Product C Sales']].sum()
percentage_change = ((sales_2022 - sales_2021) / sales_2021) * 100
print("\nPercentage Change in Sales from January to December in 2022:")
print(percentage_change)
# Task 5:
plt.plot(sales_data['Month'], sales_data['Product A Sales'], label='Product A')
plt.plot(sales_data['Month'], sales_data['Product B Sales'], label='Product B')
plt.plot(sales_data['Month'], sales_data['Product C Sales'], label='Product C')
plt.xlabel('$Month$')
plt.ylabel('$Sales Amount$')
plt.title('$Monthly Sales Data for Each Product (2021-2022)$')
plt.legend()
plt.grid(True, linestyle='--')
plt.show()
# Task 6:
correlation = sales_data[['Product A Sales', 'Product B Sales']].corr().iloc[0, 1]
print("\nCorrelation between Product A and Product B Sales:")
print(f"Correlation coefficient: {correlation:.2f}")